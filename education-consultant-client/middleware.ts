// import { getToken } from "next-auth/jwt";
// import { NextRequest, NextResponse } from "next/server";

// export async function middleware(req: NextRequest) {
//   const token = await getToken({ req, secret: process.env.NEXTAUTH_SECRET! });
//   console.log(req)
//   console.log("üîπ Token in middleware:", token);  // Token ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶π‡¶¨‡ßá
//   const { pathname } = req.nextUrl;

//   if (token) {
//     console.log(`‚úÖ User is authenticated: ${token.email}, Role: ${token.role}`);
//   } else {
//     console.log("‚ùå No token found, user unauthenticated");
//   }

//   // User is authenticated and trying to access login page
//   if (token && pathname === "/login") {
//     return NextResponse.redirect(new URL("/", req.url));
//   }

//   // User is trying to access dashboard but is not authenticated
//   if (pathname.startsWith("/dashboard") && !token) {
//     return NextResponse.redirect(new URL("/login", req.url));
//   }

//   // User has role other than 'admin'
//   if (pathname.startsWith("/dashboard") && token?.role !== "admin") {
//     return NextResponse.redirect(new URL("/", req.url));
//   }

//   return NextResponse.next();
// }

// export const config = {
//   matcher: ["/login", "/dashboard/:path*"],
// };
import { auth } from "@/auth"; // ‚úÖ NextAuth.js v5 ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶á‡¶Æ‡¶™‡ßã‡¶∞‡ßç‡¶ü
import { NextRequest, NextResponse } from "next/server";

// üîπ ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡ßç‡¶∞‡ßã‡¶ü‡ßá‡¶ï‡ßç‡¶ü‡ßá‡¶° ‡¶ì ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶∞‡ßÅ‡¶ü ‡¶°‡¶ø‡¶´‡¶æ‡¶á‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
const protectedRoutes = ["/dashboard", "/profile"];
const privateRoutes = ["/admin", "/settings"];

export async function middleware(req: NextRequest) {
  const session = await auth(); // ‚úÖ NextAuth.js v5 ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶∏‡ßá‡¶∂‡¶® ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
  const pathname = req.nextUrl.pathname;

  // üîπ ‡¶≤‡¶ó‡¶° ‡¶á‡¶® ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶™‡ßç‡¶∞‡ßã‡¶ü‡ßá‡¶ï‡ßç‡¶ü‡ßá‡¶° ‡¶∞‡ßÅ‡¶ü ‡¶¨‡ßç‡¶≤‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá
  if (protectedRoutes.includes(pathname) && !session) {
    return NextResponse.redirect(new URL("/login", req.nextUrl));
  }

  // üîπ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ "admin" ‡¶∞‡ßã‡¶≤ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶∞‡ßÅ‡¶ü ‡¶¨‡ßç‡¶≤‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá
  if (privateRoutes.includes(pathname) && session?.user?.role !== "admin") {
    return NextResponse.redirect(new URL("/", req.nextUrl));
  }

  return NextResponse.next();
}

export const config = {
  matcher: [...protectedRoutes, ...privateRoutes], // ‚úÖ matcher ‡¶è ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
};
